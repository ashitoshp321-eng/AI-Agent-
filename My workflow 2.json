{
  "name": "My workflow 2",
  "nodes": [
    {
      "parameters": {
        "promptType": "define",
        "text": "={{ $json.messages[0].text.body }}",
        "options": {
          "systemMessage": "You are a smart food ordering assistant for \"MDA Restaurant\".  \n\nRules:  \n\n1. When a user sends their first message (like hi, hello), reply with:  \n\"Welcome to MDA Restaurant üçΩÔ∏è  \nHow can I help you today?  \n- üõí Place an order  \n- ‚ÑπÔ∏è FAQ / Information  \n- üì¶ Check order / stock\"  \n\n(üëâ Keep the tone friendly like a food delivery app, not like a product e-commerce site)  \n\n2. If user wants *order*:  \n- Ask step by step: name, food item, quantity  \n- Check Inventory sheet before confirming  \n   - If available ‚Üí \"Your order for *[item]* (x quantity) is confirmed ‚úÖ\"  \n   - If not available ‚Üí \"Sorry, *[item]* is out of stock ‚ùå. Available options: [list items]\"  \n- Only confirmed orders go into the Orders sheet  \n- In Orders sheet always include:  \n   Status = Confirmed / Rejected  \n   Description = \"Order accepted (item available)\" OR \"Order rejected (out of stock)\"  \n\n3. If user wants *FAQ*:  \n- Answer short and clear (delivery time, payment method, restaurant hours)  \n\n4. If user wants *check order* or *check stock*:  \n- Ask for food name or order id  \n- Look up in Google Sheets (Orders / Inventory)  \n   - If checking order ‚Üí reply with status (Confirmed / Rejected / Cancelled / Delivered)  \n   - If checking stock ‚Üí reply with available quantity of that food  \n   - Also list all *available* food items with quantity if requested  \n\n5. If user wants *cancel order*:  \n- Reply politely:  \n  \"Sorry üôè I cannot cancel orders directly.  \n   Please call the restaurant owner first and inform them.  \n   Owner Contact: +95 1224567890\"  \n\n6. Always reply in short text like a normal WhatsApp chat  \n- Do not use **bold** or long paragraphs  \n- Use *stars* only for highlighting words  \n- Keep tone friendly, polite, and food-delivery app style  "
        }
      },
      "type": "@n8n/n8n-nodes-langchain.agent",
      "typeVersion": 2.2,
      "position": [
        208,
        -64
      ],
      "id": "fea22437-2b38-4de1-adb0-8a5a106fdf34",
      "name": "AI Agent"
    },
    {
      "parameters": {
        "model": {
          "__rl": true,
          "mode": "list",
          "value": "gpt-4.1-mini"
        },
        "options": {}
      },
      "type": "@n8n/n8n-nodes-langchain.lmChatOpenAi",
      "typeVersion": 1.2,
      "position": [
        80,
        144
      ],
      "id": "0309385d-b770-4c5c-aef9-d5f11a2b6229",
      "name": "OpenAI Chat Model",
      "credentials": {
        "openAiApi": {
          "id": "gTmKapIK3wOMVAW8",
          "name": "n8n free OpenAI API credits"
        }
      }
    },
    {
      "parameters": {
        "sessionIdType": "customKey",
        "sessionKey": "={{ $('WhatsApp Trigger').item.json.contacts[0].wa_id }}",
        "contextWindowLength": 10
      },
      "type": "@n8n/n8n-nodes-langchain.memoryBufferWindow",
      "typeVersion": 1.3,
      "position": [
        224,
        144
      ],
      "id": "a0997029-52cc-4582-9b13-80052cf751e5",
      "name": "Simple Memory"
    },
    {
      "parameters": {
        "documentId": {
          "__rl": true,
          "value": "19EabtjY4w-FON8UynmTkkcWLoqLurZm1DzWNZ7kMO8Y",
          "mode": "list",
          "cachedResultName": "Untitled spreadsheet",
          "cachedResultUrl": "https://docs.google.com/spreadsheets/d/19EabtjY4w-FON8UynmTkkcWLoqLurZm1DzWNZ7kMO8Y/edit?usp=drivesdk"
        },
        "sheetName": {
          "__rl": true,
          "value": 177902694,
          "mode": "list",
          "cachedResultName": "Inventory",
          "cachedResultUrl": "https://docs.google.com/spreadsheets/d/19EabtjY4w-FON8UynmTkkcWLoqLurZm1DzWNZ7kMO8Y/edit#gid=177902694"
        },
        "options": {}
      },
      "type": "n8n-nodes-base.googleSheetsTool",
      "typeVersion": 4.7,
      "position": [
        368,
        144
      ],
      "id": "3177db9b-c81d-4e79-b06f-aff3664087e3",
      "name": "get inventory",
      "credentials": {
        "googleSheetsOAuth2Api": {
          "id": "45NVOz9N01ZIlqSl",
          "name": "Google Sheets account"
        }
      }
    },
    {
      "parameters": {
        "documentId": {
          "__rl": true,
          "value": "19EabtjY4w-FON8UynmTkkcWLoqLurZm1DzWNZ7kMO8Y",
          "mode": "list",
          "cachedResultName": "Untitled spreadsheet",
          "cachedResultUrl": "https://docs.google.com/spreadsheets/d/19EabtjY4w-FON8UynmTkkcWLoqLurZm1DzWNZ7kMO8Y/edit?usp=drivesdk"
        },
        "sheetName": {
          "__rl": true,
          "value": 1488965082,
          "mode": "list",
          "cachedResultName": "FAQ",
          "cachedResultUrl": "https://docs.google.com/spreadsheets/d/19EabtjY4w-FON8UynmTkkcWLoqLurZm1DzWNZ7kMO8Y/edit#gid=1488965082"
        },
        "options": {}
      },
      "type": "n8n-nodes-base.googleSheetsTool",
      "typeVersion": 4.7,
      "position": [
        496,
        128
      ],
      "id": "3033c48d-4300-4b2c-8b0d-057567d2c4da",
      "name": "get FAQ",
      "credentials": {
        "googleSheetsOAuth2Api": {
          "id": "45NVOz9N01ZIlqSl",
          "name": "Google Sheets account"
        }
      }
    },
    {
      "parameters": {
        "operation": "append",
        "documentId": {
          "__rl": true,
          "value": "19EabtjY4w-FON8UynmTkkcWLoqLurZm1DzWNZ7kMO8Y",
          "mode": "list",
          "cachedResultName": "Untitled spreadsheet",
          "cachedResultUrl": "https://docs.google.com/spreadsheets/d/19EabtjY4w-FON8UynmTkkcWLoqLurZm1DzWNZ7kMO8Y/edit?usp=drivesdk"
        },
        "sheetName": {
          "__rl": true,
          "value": 1417794932,
          "mode": "list",
          "cachedResultName": "Orders",
          "cachedResultUrl": "https://docs.google.com/spreadsheets/d/19EabtjY4w-FON8UynmTkkcWLoqLurZm1DzWNZ7kMO8Y/edit#gid=1417794932"
        },
        "columns": {
          "mappingMode": "defineBelow",
          "value": {
            "Customer Name": "={{ /*n8n-auto-generated-fromAI-override*/ $fromAI('Customer_Name', ``, 'string') }}",
            "Food Item": "={{ /*n8n-auto-generated-fromAI-override*/ $fromAI('Food_Item', ``, 'string') }}",
            "Quantity Ordered": "={{ /*n8n-auto-generated-fromAI-override*/ $fromAI('Quantity_Ordered', ``, 'string') }}",
            "Status": "={{ /*n8n-auto-generated-fromAI-override*/ $fromAI('Status', ``, 'string') }}",
            "Order Date": "={{ $now.format('yyyy-MM-dd hh-mm-ss a') }}"
          },
          "matchingColumns": [],
          "schema": [
            {
              "id": "Customer Name",
              "displayName": "Customer Name",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": false
            },
            {
              "id": "Food Item",
              "displayName": "Food Item",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": false
            },
            {
              "id": "Quantity Ordered",
              "displayName": "Quantity Ordered",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": false
            },
            {
              "id": "Order Date",
              "displayName": "Order Date",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": false
            },
            {
              "id": "Status",
              "displayName": "Status",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": false
            }
          ],
          "attemptToConvertTypes": false,
          "convertFieldsToString": false
        },
        "options": {}
      },
      "type": "n8n-nodes-base.googleSheetsTool",
      "typeVersion": 4.7,
      "position": [
        624,
        96
      ],
      "id": "28295804-35ae-4783-8eb8-1e0266e3a014",
      "name": "Post orders",
      "credentials": {
        "googleSheetsOAuth2Api": {
          "id": "45NVOz9N01ZIlqSl",
          "name": "Google Sheets account"
        }
      }
    },
    {
      "parameters": {
        "updates": [
          "messages"
        ],
        "options": {}
      },
      "type": "n8n-nodes-base.whatsAppTrigger",
      "typeVersion": 1,
      "position": [
        -16,
        -64
      ],
      "id": "57401fdd-828e-4f4b-9eae-87a6427cd7ad",
      "name": "WhatsApp Trigger",
      "webhookId": "32463900-adc1-4cbd-b087-6e47d17209ac",
      "credentials": {
        "whatsAppTriggerApi": {
          "id": "XFRuG5WhwVVb5nFC",
          "name": "WhatsApp OAuth account 2"
        }
      }
    },
    {
      "parameters": {
        "operation": "send",
        "phoneNumberId": "873357795856417",
        "recipientPhoneNumber": "+91 9256888353",
        "textBody": "={{ $json.output }}",
        "additionalFields": {}
      },
      "type": "n8n-nodes-base.whatsApp",
      "typeVersion": 1.1,
      "position": [
        560,
        -64
      ],
      "id": "857fc100-458c-4d9a-af1b-62a13c5a8faf",
      "name": "Send message",
      "webhookId": "ac9b0fd5-961d-467d-a797-c0dda10946ef",
      "credentials": {
        "whatsAppApi": {
          "id": "tBERjKNOFXvYxS4Y",
          "name": "WhatsApp account 2"
        }
      }
    }
  ],
  "pinData": {},
  "connections": {
    "OpenAI Chat Model": {
      "ai_languageModel": [
        [
          {
            "node": "AI Agent",
            "type": "ai_languageModel",
            "index": 0
          }
        ]
      ]
    },
    "Simple Memory": {
      "ai_memory": [
        [
          {
            "node": "AI Agent",
            "type": "ai_memory",
            "index": 0
          }
        ]
      ]
    },
    "get inventory": {
      "ai_tool": [
        [
          {
            "node": "AI Agent",
            "type": "ai_tool",
            "index": 0
          }
        ]
      ]
    },
    "get FAQ": {
      "ai_tool": [
        [
          {
            "node": "AI Agent",
            "type": "ai_tool",
            "index": 0
          }
        ]
      ]
    },
    "Post orders": {
      "ai_tool": [
        [
          {
            "node": "AI Agent",
            "type": "ai_tool",
            "index": 0
          }
        ]
      ]
    },
    "WhatsApp Trigger": {
      "main": [
        [
          {
            "node": "AI Agent",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "AI Agent": {
      "main": [
        [
          {
            "node": "Send message",
            "type": "main",
            "index": 0
          }
        ]
      ]
    }
  },
  "active": false,
  "settings": {
    "executionOrder": "v1"
  },
  "versionId": "8df053f9-2ac6-4d41-baf3-da66f5ed7ef1",
  "meta": {
    "templateCredsSetupCompleted": true,
    "instanceId": "d72004c7e08b0c042d4174094767e4c234c395adfd18d0dfcb294b5bae13fa8f"
  },
  "id": "KcErBZ5qmtXzT1uB",
  "tags": []
}